{
  "swagger": "2.0",
  "info": {
    "description": "DEC-2022 NODEJS THE BEST GROUP",
    "version": "1.0.0",
    "title": "DEC-2022 API",
    "contact": {
      "email": "apiteam@okten.io"
    }
  },
  "tags": [
    {
      "name": "users",
      "description": "Everything about users"
    },
    {
      "name": "auth",
      "description": "authorization"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "get all users",
        "summary": "get all users summary",
        "responses": {
          "200": {
            "description": "RETURNED ARRAY OF USERS"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "tags": [
          "users"
        ],
        "description": "get user by user id",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user to return",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "default": "eyfdkfldsfjkgflsjfdas"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "RETURNED USER",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Updates a user in the store",
        "description": "",
        "operationId": "updateUserData",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "default": "eyfdkfldsfjkgflsjfdas"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Updated name of the user",
            "required": false,
            "type": "string"
          },
          {
            "name": "age",
            "in": "formData",
            "description": "Updated age of the user",
            "required": false,
            "type": "number"
          },
          {
            "name": "gender",
            "in": "formData",
            "description": "Updated gender of the user",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "Updated email of the user",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User updated"
          },
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Deletes a user",
        "description": "",
        "operationId": "deleteUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "schema": {
              "type": "string",
              "default": "eyfdkfldsfjkgflsjfdas"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User id to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },

    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Create user",
        "description": "Register new user",
        "operationId": "createUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "The user email for login",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Expires-After": {
                "type": "string",
                "format": "date-time",
                "description": "date in UTC when token expires"
              }
            },
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid email/password supplied"
          }
        }
      }
    }
  },

  "definitions": {
    "User": {
      "properties": {
        "name": {
          "type": "string"
        },
        "age": {
          "type": "integer",
          "default": 5
        },
        "gender": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "isActivated": {
          "type": "boolean"
        }
      }
    }
  }
}